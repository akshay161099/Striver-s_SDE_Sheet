class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> finalList = new ArrayList<>();
        List<String> list = new ArrayList<>();
        helper(0,s,list,finalList);
        return finalList;
    }
    public void helper(int index, String s, List<String> list, List<List<String>> finalList){
        if(index == s.length()){
            finalList.add(new ArrayList<>(list));
            return;
        }
        for(int i = index;i<s.length();i++){
            if(palindrome(index,i,s)){
                list.add(s.substring(index,i+1));
                helper(i+1, s, list, finalList);
                list.remove(list.size()-1);
            }
        }
    }
    public boolean palindrome(int i, int j, String s){
        while(i<=j){
            if(s.charAt(i++) != s.charAt(j--)){
                return false;
            }
        }
        return true;
    }
}
