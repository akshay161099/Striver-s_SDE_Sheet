class Solution {
    public boolean isBipartite(int[][] graph) {
        boolean[] visited = new boolean[graph.length];
        int[] color = new int[graph.length];
        for(int i = 0;i<color.length;i++){
            color[i] = -1;
        }
        for(int i = 0;i<graph.length;i++){
           if(color[i] == -1){
               if(dfs(i,0,graph,color) == false){
                   return false;
               }
           }
            
        }
        return true;
    }
    //two colors - 1 and 2
    public boolean dfs(int i, int colour,int[][] graph,int[] color){
        color[i] = colour;
        for(int j : graph[i]){
            if(color[j] == -1){
                if(dfs(j,1-colour,graph,color) == false){
                    return false;
                }
            }
            else if(color[j] == colour){
                return false;
            }
        }
        return true;
        
    }
}
